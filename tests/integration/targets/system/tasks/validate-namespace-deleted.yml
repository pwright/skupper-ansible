---
- name: Set expected values for rootless execution
  ansible.builtin.set_fact:
    runtime_dir: "{{ lookup('env', 'HOME') + '/.local/share/skupper/namespaces/' + namespace + '/runtime' }}"
    systemctl_cmd: "{{ 'systemctl --user is-active skupper-' + namespace }}"
  when: ansible_user_id != "0"
- name: Set expected values for rootful execution
  ansible.builtin.set_fact:
    runtime_dir: "{{ '/var/lib/skupper/namespaces/' + namespace + '/runtime' }}"
    systemctl_cmd: "{{ 'systemctl is-active skupper-' + namespace }}"
  when: ansible_user_id == "0"
- name: Stats for the namespace runtime directory
  register: _dir
  ansible.builtin.stat:
    path: "{{ runtime_dir }}"
- name: Assert that the directory does not exist
  ansible.builtin.assert:
    that:
      - _dir.stat.exists is defined
      - not _dir.stat.exists
- name: Assert that the systemd service exists
  ansible.builtin.command: "{{ systemctl_cmd }}"
  changed_when: false
  register: _systemctl
  failed_when:
    - _systemctl.rc != 4
    # systemctl does not work with ansible-test integration
    - "{{ 'Failed to connect to user scope bus via local transport' not in _systemctl.stderr }}"
    # validation happens when running runme.sh directly
    - "{{ 'inactive' not in _systemctl.stdout }}"
- name: Assert that the skupper-router container does not exist
  containers.podman.podman_container_info:
    name: "{{ namespace + '-skupper-router' }}"
  register: _container
- name: Assert that no containers returned
  ansible.builtin.assert:
    that:
      - _container.containers is defined 
      - _container.containers | length == 0
